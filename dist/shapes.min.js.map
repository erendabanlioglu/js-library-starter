{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///shapes.min.js","webpack:///webpack/bootstrap 1efcfb6c799cf769e6f0","webpack:///./src/shapes/shape.js","webpack:///./~/d3/build/d3.js","webpack:///./src/shapes/circle/circle.js","webpack:///./src/shapes/rectangle/rectangle.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Shape","svg","width","height","id","element","document","getElementById","appendChild","node","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","set","callback","noop","concat","push","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_shape","_d","obj","newObj","default","_Shape","_this","getPrototypeOf","Rectangle","_rectangle"],"mappings":"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","file":"shapes.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"shapes\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shapes\"] = factory();\n\telse\n\t\troot[\"shapes\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"shapes\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shapes\"] = factory();\n\telse\n\t\troot[\"shapes\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Shape = exports.Shape = function () {\n  function Shape() {\n    _classCallCheck(this, Shape);\n\n    this.svg = null;\n    this.width = 200;\n    this.height = 200;\n  }\n\n  _createClass(Shape, [{\n    key: \"render\",\n    value: function render() {}\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"resize\",\n    value: function resize() {}\n  }, {\n    key: \"print\",\n    value: function print(id) {\n      var element = document.getElementById(id);\n      element && element.appendChild(this.svg.node());\n    }\n  }, {\n    key: \"area\",\n    get: function get() {}\n  }, {\n    key: \"circumference\",\n    get: function get() {}\n  }]);\n\n  return Shape;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _d = __webpack_require__(1);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Circle = exports.Circle = function (_Shape) {\n  _inherits(Circle, _Shape);\n\n  function Circle(radius) {\n    _classCallCheck(this, Circle);\n\n    var _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this));\n\n    _this.radius = radius ? radius : 40;\n    _this.width = _this.radius * 2 + 10;\n    _this.height = _this.radius * 2 + 10;\n    return _this;\n  }\n\n  _createClass(Circle, [{\n    key: \"render\",\n    value: function render() {\n      var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n\n      svg.attr(\"width\", this.width).attr(\"height\", this.height);\n\n      svg.append(\"circle\").style(\"stroke\", \"gray\").style(\"fill\", \"white\").attr(\"r\", this.radius).attr(\"cx\", this.width / 2).attr(\"cy\", this.height / 2);\n\n      this.svg = svg;\n      return this.svg.node();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"resize\",\n    value: function resize() {}\n  }, {\n    key: \"area\",\n    get: function get() {\n      //1px = 0.02645833 cm if you need as cm\n      return Math.PI * Math.pow(this.radius, 2);\n    }\n  }, {\n    key: \"circumference\",\n    get: function get() {\n      return 2 * this.radius * Math.PI;\n    }\n  }]);\n\n  return Circle;\n}(_shape.Shape);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rectangle = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _d = __webpack_require__(1);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Rectangle = exports.Rectangle = function (_Shape) {\n  _inherits(Rectangle, _Shape);\n\n  function Rectangle(width, height) {\n    _classCallCheck(this, Rectangle);\n\n    var _this = _possibleConstructorReturn(this, (Rectangle.__proto__ || Object.getPrototypeOf(Rectangle)).call(this));\n\n    if (width) _this.width = width;\n    if (height) _this.height = height;\n    return _this;\n  }\n\n  _createClass(Rectangle, [{\n    key: \"render\",\n    value: function render() {\n      var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n\n      svg.attr(\"width\", this.width).attr(\"height\", this.height);\n\n      svg.append(\"rect\").style(\"stroke\", \"gray\").style(\"fill\", \"white\").attr(\"width\", this.width).attr(\"height\", this.height);\n\n      this.svg = svg;\n      return this.svg.node();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"resize\",\n    value: function resize() {}\n  }, {\n    key: \"area\",\n    get: function get() {\n      return this.width * this.height;\n    }\n  }, {\n    key: \"circumference\",\n    get: function get() {\n      return (this.width + this.height) * 2;\n    }\n  }]);\n\n  return Rectangle;\n}(_shape.Shape);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _circle = __webpack_require__(2);\n\nObject.keys(_circle).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _circle[key];\n    }\n  });\n});\n\nvar _rectangle = __webpack_require__(3);\n\nObject.keys(_rectangle).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _rectangle[key];\n    }\n  });\n});\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// shapes.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1efcfb6c799cf769e6f0","\"use strict\";\r\n\r\nexport class Shape{\r\n  constructor () {\r\n    this.svg = null;\r\n    this.width = 200;\r\n    this.height = 200;\r\n  }\r\n  render(){}\r\n  update(){}\r\n  resize(){}\r\n  print(id){\r\n    let element = document.getElementById(id);\r\n    element && element.appendChild(this.svg.node());\r\n  }\r\n\r\n  get area(){}\r\n  get circumference(){}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shapes/shape.js","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nimport {Shape} from '../shape.js';\r\nimport * as d3 from \"d3\";\r\n\r\nexport class Circle extends Shape{\r\n  constructor (radius) {\r\n    super();\r\n    this.radius = radius ? radius : 40;\r\n    this.width = this.radius*2+10;\r\n    this.height = this.radius*2+10;\r\n  }\r\n  render(){\r\n    var svg =  d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\r\n\r\n    svg.attr(\"width\", this.width)\r\n    .attr(\"height\", this.height);\r\n\r\n    svg.append(\"circle\")\r\n      .style(\"stroke\", \"gray\")\r\n      .style(\"fill\", \"white\")\r\n      .attr(\"r\", this.radius)\r\n      .attr(\"cx\", this.width/2)\r\n      .attr(\"cy\", this.height/2);\r\n\r\n    this.svg = svg;\r\n    return this.svg.node();\r\n  }\r\n  update(){}\r\n  resize(){}\r\n\r\n  get area(){\r\n    //1px = 0.02645833 cm if you need as cm\r\n    return Math.PI*this.radius**2;\r\n  }\r\n  get circumference(){\r\n    return 2*this.radius*Math.PI;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shapes/circle/circle.js","\"use strict\";\r\nimport {Shape} from '../shape.js';\r\nimport * as d3 from \"d3\";\r\n\r\nexport class Rectangle extends Shape{\r\n  constructor (width, height) {\r\n    super();\r\n    if(width) this.width = width;\r\n    if(height) this.height = height;\r\n  }\r\n  render(){\r\n    var svg =  d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\r\n\r\n    svg.attr(\"width\", this.width)\r\n    .attr(\"height\", this.height);\r\n\r\n    svg.append(\"rect\")\r\n      .style(\"stroke\", \"gray\")\r\n      .style(\"fill\", \"white\")\r\n      .attr(\"width\", this.width)\r\n      .attr(\"height\", this.height);\r\n\r\n    this.svg = svg;\r\n    return this.svg.node();\r\n  }\r\n  update(){}\r\n  resize(){}\r\n\r\n  get area(){\r\n    return this.width*this.height;\r\n  }\r\n  get circumference(){\r\n    return (this.width+this.height)*2;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shapes/rectangle/rectangle.js","export * from './shapes/circle/circle';\r\nexport * from './shapes/rectangle/rectangle';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}